Game: Heroes of Lumora: a bullet hell game, similar to the idea of vampire survivors

Gitfront read only repository: https://gitfront.io/r/tenchijin77/Ea5WKiTiUMTN/heroes-of-lumora/

Current GitHub commit hash: 0ac68de


Trello board for HoL:

https://trello.com/invite/b/687dfb8c9094426910d1698c/ATTI96afa298a949ce1898a6425105bdf0f79F074F7D/heroes-of-lumora


Environmental Variables:

-I am using Godot 4.4.1

Files:
-snakecase is used for all file names, with all words in lowercase
-pascalcase is used for folders, (i.e. first letter capital like /Data)
-all variables should have their type explicitly called to avoid error messages
-when creating elements in scene files, i will use snakecase for all names, i.e. (sound file named enemy_attack)
-all tables are stored in json files in res://Data/
-all scripts are stored in res://Scripts/
-all scenes are stored in res://Scenes
-all assets like sounds and images are in res://Assets/
-user data is saved in user://saves/ (not yet implemented)
-my player information is in player.gd
-all scripts should start with a comment designating the script name, i.e. (# snake.gd)
-all json files should start with a comment designating the file name and purpose, i.e. ("_comment": "monsters.json - this table is used for monster's stats ")
-all functions in scripts should start with a comment, documenting what the function does, i.e. #Apply stats to character file
-all script files should use tab indentation, not space indentation

Collisions:

-all monsters are in the monsters node group for collisions (layer 2)
-the player is in the player node group for collisions (layer 1)
-player projectiles are on layer 3 for collisions
-enemy projectiles are on layer 4 for collisions
-environment is on layer 5 for collisions

Naming:
-scenes or levels are referred to as zones
-monsters are referred to as mobs (moving objects)

Behaviour:
-spawns are instantiated and handled by node_pool.gd
-mobs are randomly generated via enemy_spawner.tscn with enemy_spawner.gd
-projectiles are all based off of projectile.tscn and projectile.gd; each unique attack will have its own file i.e. arrow.tscn and .gd for the player's attack, and bone.tscn and gd, and fireball.tscn and gd, and axe.tscn and gd for the enemies' attacks.

Monsters:
-monsters logic is handled by monster.tscn (the script that all unique mobs will inherit from) and monsters.gd
-monsters will have their own scene based off of monster.tscn. i.e. skeleton.tscn; when monsters have unique stats or logic, they will have their own script like skeleton.gd
-skeleton.tscn and gd - fires projectile, bone.tscn and gd
-wizard.tscn and gd - fires projectile, fireball.tsn and gd

Controls:


Move: Arrow keys or WASD

Melee Attack: Left mouse click - calls arrow.tscn and gd
