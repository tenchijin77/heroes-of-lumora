Game: Heroes of Lumora: a bullet hell game, similar to the idea of vampire survivors, with a spin on tower based defense games: there is a town under attack by monsters, and the player is the tower, defending the villagers in the town while they try to extract. (the player is a hero with a bow and arrow that will attack the enemies as the guards try to defend the town. The player has to buy as much time as possible so the villagers can escape over increasingly larger and more difficult waves of enemies.

GitHub Repo: https://github.com/tenchijin77/heroes-of-lumora

Trello board for HoL:

https://trello.com/invite/b/687dfb8c9094426910d1698c/ATTI96afa298a949ce1898a6425105bdf0f79F074F7D/heroes-of-lumora




Environmental Variables:

-I am using Godot 4.4.1, and dialogic alpha 16 for dialogue

Files:
-snakecase is used for all file names, with all words in lowercase
-pascalcase is used for folders, (i.e. first letter capital like /Data)
-all variables should have their type explicitly called to avoid error messages
-when creating elements in scene files, i will use snakecase for all names, i.e. (sound file named enemy_attack)
-all tables are stored in json files in res://Data/
-all scripts are stored in res://Scripts/
-all scenes are stored in res://Scenes
-all assets like sounds and images are in res://Assets/
-user data is saved in user://saves/ (not yet implemented)
-my player information is in player.gd
-all scripts should start with a comment designating the script name, i.e. (# snake.gd)
-all json files should start with a comment designating the file name and purpose, i.e. ("_comment": "monsters.json - this table is used for monster's stats ")
-all functions in scripts should start with a comment, documenting what the function does, i.e. #Apply stats to character file
-all script files should use tab indentation, not space indentation

Collisions:

-the player is in the player node group for collisions (layer 1)
-all monsters are in the monsters node group for collisions (layer 2)
-player projectiles are on layer 3 for collisions
-enemy projectiles are on layer 4 for collisions
-environment is on layer 5 for collisions
-friendly npcs are on layer 6
-friendly npc projectiles are on layer 7
-forbidden layer is 8 (area where monsters can't spawn at)
-loot is on layer 9
-healing projectiles are on layer 10 (the healer npc priestess.tscn and healer.gd uses healing_projectile.gd)

-player should be able to collide with 2, 4, 5, 6, 9, 10
-friendly should be able to collide with 1, 2, 4, 5, 6, 10
-monsters should be able to collide with 1, 2, 3, 5, 6, 7, 10

Projectiles:
-player: Layer 3 - needs to collide with 2 (monsters), and 5 (environment), uses projectile.gd
-friendly: Layer 7 - needs to collide with 2 (monsters), and 5 (environment), uses projectile.gd
-healing projectiles: Layer 10 - needs to collide with 1 (player), 2 (monsters), 5 (environment), 6 (friendly), (logic needs to be called so if it enters a collision for the player, or friendly groups it heals the unit; if it enters a monster it does damage. It uses the same projectile for both: heal_bolt.tscn and healing_projectile.gd)
-monster projectiles: Layer 4 - needs to collide with 1 (player), 5 (enviroment), uses projectile.gd

Monster Projectile layouts:
skeleton: bone.tscn and projectile.gd
wizard: fireball.tscn and projectile.gd
goblin: dagger.tscn and projectile.gd
ghost: ghost_fire.tscn and projectile.gd
beholder: disintegration_ray.tscn and projectile.gd
lich: necro_bolt.tscn and projectile.gd
ogre: ogre.tscn and projectile.gd

NPC Projectile layouts:

guard: guard_arrow.tscn and projectile.gd
priestess: heal_bolt.tscn and healing_projectile.gd

Groups:

Player is in player node group.
Friendly NPCs are in friendly node group.
Priestess (Healing NPC) is in healer node group.
Monsters are in monster node group.

Naming:
-scenes or levels are referred to as zones
-monsters are referred to as mobs (moving objects)

Behaviour:
-spawns are instantiated and handled by node_pool.gd
-mobs are randomly generated via enemy_spawner.tscn with enemy_spawner.gd
-projectiles are all based off of projectile.tscn and projectile.gd; each unique attack will have its own file i.e. arrow.tscn and .gd for the player's attack, and bone.tscn and gd, and fireball.tscn and gd, and axe.tscn and gd for the enemies' attacks.

Monsters:
-monsters logic is handled by monster.tscn (the script that all unique mobs will inherit from) and monsters.gd
-monsters will have their own scene based off of monster.tscn. i.e. skeleton.tscn; when monsters have unique stats or logic, they will have their own script like skeleton.gd. Each projectile is fired via projectile.gd:

-skeleton.tscn and gd - fires projectile, bone
-wizard.tscn and gd - fires projectile, fireball
-ghost.tscn and gd - fires projectile, ghost_fire
-goblin.tscn and gd - fires projectile, dagger

NPCs:
-guard is a stationary guard AI that will engage enemies when they get in his area2d detection zone, and then return to his station. Uses guard.tscn and guard.gd, fires with projectile.gd
-priestess is a roaming healer AI that will engage enemies and heal player and friendly group when they are damaged. uses priestess.tscn and healer.gd, and healing_projectile.gd. She has a healing aura, that collides with layers 1, 6, and 11 and provides a heal over time, so her healing projectile doesn't collide with her own sprite, and allows the healer to heal all friendly units.


Villagers:
-villagers spawn from villager_spawner.gd and use villager.tscn
-variables stored in villagers.json
-call res://Assets/UI/villager_popup.tscn to shout messages on screen.

Controls:

global.gd is the script that handles updating the score labels, and awarding points, etc. This is a global super ready called Global.
game_data.gd is a superready that handles the villager's information called GameData.

Move: Arrow keys or WASD

Melee Attack: Left mouse click - calls arrow.tscn and projectile.gd


Time System:

I'm thinking time will advance very quickly in the game world; 30sec - 1 min of real time will be equal to 1 hour in game time. This will be connected to a time_manager function that will make the lighting change in game.

Months & Seasons
- Number of Months: 10 (for a distinct feel)
- Days per Month: 36 days (360-day year feels magical and symmetrical)
- Seasons: 5 (each season tied to a magical or elemental theme)
| Month | Season | Element/Theme |
| Luminar | Dawnspring | Light & Renewal |
| Verdalis | Greensurge | Nature & Growth |
| Pyrosol | Emberheight | Fire & Passion |
| Zepheral | Windsway | Air & Change |
| Aquenox | Tideswell | Water & Reflection |
| Obscurion | Duskfall | Darkness & Secrets |
| Solsticea | Midveil | Balance & Mystery |
| Thornmere | Witherwane | Decay & Twilight |
| Glacivorne | Frostbound | Ice & Preservation |
| Starvane | Nightreach | Cosmos & Fate |


Days of the Week
- Number of Days: 6-day week (streamlined and unique)
| Day Name | Theme |
| Mornis | Beginnings |
| Ferros | Strength & Battle |
| Eldra | Magic & Wisdom |
| Solyn | Hope & Light |
| Umbra | Shadows & Secrets |
| Nexar | Fate & Endings |



Era & Timeline
Current Era Name: Era of Veilfire
- Associated with an ongoing battle between ancient elemental forces and mortal kingdoms.
- Named for the mystical Veilfire — a flame that burns between worlds.
Past Eras
- Era of Echoing Stone: Rise of the first civilizations from the remnants of gods.
- Era of Shattered Crowns: Age of warring monarchs, betrayal, and blood magic.
- Era of the Silver Tides: A time when moonborn creatures ruled the coasts.
- Era of Hollow Stars: An age of celestial omens and interrealm migrations.


Historical Timeline of Aldenexia
Era of Echoing Stone
~10,000–6,000 years ago
Theme: Creation, divine legacy, elemental awakening

Year 1, Luminar 1: The First Flame is kindled by Aurethiel and Durnhal, marking the beginning of recorded time.
Year 312, Verdalis 18: The Stoneheart Collective awakens beneath the Embercrag Mountains, believed to be shaped by Dromek himself.
Year 1,200, Pyrosol 36: The Verdant Kin form the first pact with Thalorun, binding mortal druids to nature spirits.


Era of Shattered Crowns
~6,000–3,000 years ago
Theme: Betrayal, war, blood magic

Year 87, Obscurion 12: The Twilight Accord is born from the ashes of the Viremont Empire, guided by Virexus and Morthan.
Year 1,004, Thornmere 6: The Crimson Warlord Kaerun descends from the north, uniting fractured warbands under the Ironclad Brotherhood.
Year 1,800, Solsticea 1: The Codex of Infinite Paths is stolen from the Arcane Synod, sparking the Mage Wars.


Era of the Silver Tides
~3,000–1,500 years ago
Theme: Moonborn dominion, sea empires, mysticism

Year 112, Aquenox 24: The Pearl of the Abyss is discovered by Thalindra’s followers, founding the Echoes of the Deep.
Year 1,002, Starvane 36: The Lunaborne Conclave rises, claiming dominion over the tides and moonlight.
Year 1,499, Glacivorne 1: The Glare of Zetherin descends from the sky, bringing radiant order to the coasts.


Era of Hollow Stars
~1,500–300 years ago
Theme: Celestial omens, interrealm migrations

Year 3, Solsticea 18: The Chronoglass of Aeons is shattered, scattering time magic across Aldenexia. Elarion’s cults begin to form.
Year 212, Starvane 6: The Spire of Concordance phases into the material realm, establishing the Arcane Synod.
Year 1,001, Umbra 5: The Guild of the Eclipsed Mind is founded by Velistra Noct, claiming to hear the “echoes of forgotten futures.”


Era of Veilfire (Current Era)
~300 years ago–present
Theme: Elemental resurgence, divine relics, balance vs. entropy

Year 1, Luminar 1: The Veilfire ignites in the ruins of Old Viremont, marking the start of the current era.
Year 88, Zepheral 12: The Stormbinders of Mael’Thun harness Zephyra’s fury to repel the Ashenborn Pact.
Year 212, Obscurion 36: The Umbral Talon attempts to corrupt the Solstice Aegis, sparking the Second Sundering.
Year 289, Starvane 1: The Luminar Covenant recovers a fragment of the Orrenlight Grimoire, foretelling a second cataclysm.
Year 300, Solyn 6 (Present Day): Tensions rise between the Order of the Silent Fist, Twilight Accord, and Circle of Thorns as celestial alignments shift.
